// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calibration_cpp
Rcpp::List calibration_cpp(arma::mat cost_fun, arma::vec O, arma::vec D, double delta);
RcppExport SEXP _cppSim_calibration_cpp(SEXP cost_funSEXP, SEXP OSEXP, SEXP DSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type cost_fun(cost_funSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type O(OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(calibration_cpp(cost_fun, O, D, delta));
    return rcpp_result_gen;
END_RCPP
}
// run_model_cpp
List run_model_cpp(arma::mat flows, arma::mat distance, double beta, std::string type);
RcppExport SEXP _cppSim_run_model_cpp(SEXP flowsSEXP, SEXP distanceSEXP, SEXP betaSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type flows(flowsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type distance(distanceSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(run_model_cpp(flows, distance, beta, type));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cppSim_calibration_cpp", (DL_FUNC) &_cppSim_calibration_cpp, 4},
    {"_cppSim_run_model_cpp", (DL_FUNC) &_cppSim_run_model_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_cppSim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
